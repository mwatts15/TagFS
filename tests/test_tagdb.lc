#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <assert.h>
#include <fcntl.h>
#include "test.h"
#include "util.h"
#include "tagdb.h"
#include "log.h"

#define TESTDIR "/tmp/file_cabinet_test.XXXXXX"
char test_directory[] = TESTDIR;
char *db_name = NULL;
static int test_number = 0;

%(setup TagDB)
{
    /* 256 MB mmap file */
    char *b = g_strdup_printf("test_log%d.log", test_number);
    log_open(b, ERROR);
    free(b);
    strcpy(test_directory, TESTDIR);
    mkdtemp(test_directory);
    db_name = g_strdup_printf("%s/sql.db", test_directory);
}

%(teardown TagDB)
{
    if (unlink(db_name) != 0)
    {
        perror("teardown: Error with unlink");
    }
    if (rmdir(test_directory) != 0)
    {
        perror("teardown: Error with rmdir");
    }
    g_free(db_name);
    log_close();
    test_number++;
}

%(test TagDB no_file_on_new)
{

    TagDB *db = tagdb_new(db_name);
    tagdb_destroy(db);
    int r = open(db_name, O_RDONLY);
    CU_ASSERT_TRUE(r > 0);
}

%(test TagDB file_created_on_load)
{
    TagDB *db = tagdb_new(db_name);
    File *f = new_file("file");
    insert_file(db, f);
    file_id_t id = file_id(f);
    tagdb_destroy(db);
    db = tagdb_new(db_name);
    f = retrieve_file(db, id);
    CU_ASSERT_NOT_NULL(f);
    tagdb_destroy(db);
}

%(test TagDB tag_created_on_load)
{
    TagDB *db = tagdb_new(db_name);
    Tag *f = new_tag("file", tagdb_int_t, 0);
    insert_tag(db, f);
    file_id_t id = tag_id(f);
    tagdb_destroy(db);
    db = tagdb_new(db_name);
    f = retrieve_tag(db, id);
    CU_ASSERT_NOT_NULL(f);
    tagdb_destroy(db);
}

%(test TagDB new_tag_ids_increase_on_reload)
{
    TagDB *db = tagdb_new(db_name);
    Tag *t = new_tag("tag", tagdb_int_t, 0);
    insert_tag(db, t);
    file_id_t id = tag_id(t);
    tagdb_destroy(db);

    db = tagdb_new(db_name);
    t = new_tag("tag2", tagdb_int_t, 0);
    insert_tag(db, t);
    CU_ASSERT_GREATER_THAN(tag_id(t), id);
    tagdb_destroy(db);
}

%(test TagDB new_file_ids_increase_on_reload)
{
    TagDB *db = tagdb_new(db_name);
    File *f = new_file("tag");
    insert_file(db, f);
    file_id_t id = file_id(f);
    tagdb_destroy(db);

    db = tagdb_new(db_name);
    f = new_file("tag2");
    insert_file(db, f);
    CU_ASSERT_GREATER_THAN(file_id(f), id);
    tagdb_destroy(db);
}

int main ()
{
   %(run_tests);
}


