BUILD
-----
Do:
  $ make tagfs
in the main project directory. Then run:
  $ make tests
to build and run the tests to make sure everything works correctly on your system.

Prerequisites
 fuse (libs and headers) (>= 2.8.7)
 glib (Works with glib versions 2.24.1, 2.30.2, 2.32.3)

 On Debian/Ubuntu:
  $ apt-get install libglib2.0-dev libfuse-dev


USAGE
-----
*Note that this is usage based on R1, so some of these interactions aren't supported in beta*

To mount TagFS
./tagfs <copies directory> <mount directory>

Where  <copies directory> and <mount directory> are empty directories. You can add files by moving them to the mount directory. Be careful to unmount TagFS properly or you WILL lose data from changes made while mounting.

All un-tagged files are shown in the top level -- this is the default behaviour. One could also have *all* managed files appear in the top-level of the tagfs with a special "unsorted" tag applied to all untagged files that are however managed. The idea is that the tag filesystem is to be used in conjunction with a normal file system and you have a directory opened under the mounted tagfs and a directory opened under your normal untagged picture directory.

When you "copy" a file to the mounted tagfs, the file is tagged with the associated directory and thus appears there in the hierarchy. Copying a file already within the tagfs to another directory in the tagfs will simply add the tag. Removing a tag is deleting the file from the related directory. Unmanaging a file in the default mode (unsorted files only in top-level) consists of moving the file to the special REMOVE directory in the top-level. Unmanaging in the alternate mode (all managed files in the top-level) consists of deleting the file in the top-level.

The main advantage of this system is that it allows you to have files stored in more than one logical location at the same time without having to manage soft or hard links between files. I'm sure the advantages of a system like this are well-documented elsewhere so I won't go into it.

Changing to a directory, you see all of the files which share this tag and the union of all of those files' tags.

IMPLEMENTATION
--------------
A database of files and their associated tags is loaded on mount, managaed by the running file system, and saved on unmount. Tags have simple types like String and Integer associated with them, which users can modify by writing to a special filehandle in the file system or using special utilities that write this filehandle.

The real files (i.e. stored on disk) are stored in a separate directory outside of the mount point (or possibly the mount directory itself in the future) which is specified on mount. They are given id numbers that remain with them for the life of the file.